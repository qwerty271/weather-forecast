{"version":3,"sources":["redux/types.js","redux/actions.js","Components/Header/Header.js","Components/Card/Card.js","Components/Main/Main.js","Components/App/App.js","reportWebVitals.js","redux/reducer.js","index.js"],"names":["FETCH_WEATHER","GET_DATA_WEATHER","weatherForecast","city","dispatch","fetchWeather","axios","get","then","res","getWeather","data","catch","err","console","log","type","payload","connect","state","props","day","Date","getDay","React","useState","popupVisible","setPopupVisible","useDispatch","chooseCity","className","Object","keys","length","location","name","getHours","getMinutes","current","condition","text","onClick","temp_c","Math","round","alt","src","icon","forecast","forecastday","hour","chance_of_rain","avghumidity","gust_kph","Card","date","maxTemp","minTemp","weather","months","days","formatDate","dateArray","split","month","replace","formatDay","number","maxtemp_c","mintemp_c","App","useEffect","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","store","createStore","action","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2TAAaA,EAAgB,gBAChBC,EAAmB,mB,iBCEnBC,EAAkB,SAACC,GAC9B,OAAO,SAACC,GACNA,EAASC,KAETC,IACGC,IADH,4HAEyHJ,IAEtHK,MAAK,SAACC,GACLL,EAASM,EAAWD,EAAIE,UAEzBC,OAAM,SAACC,GACNC,QAAQC,IAAIF,QAKdR,EAAe,iBAAO,CAC1BW,KAAMhB,IAGFU,EAAa,SAACC,GAAD,MAAW,CAC5BK,KAAMf,EACNgB,QAAQ,eACHN,K,OCoGQO,mBAJf,SAAyBC,GACvB,MAAO,CAAER,KAAMQ,KAGFD,EAzHf,SAAgBE,GACd,IASMC,GAAM,IAAIC,MAAOC,SACvB,EAAwCC,IAAMC,UAAS,GAAvD,mBAAOC,EAAP,KAAqBC,EAArB,KACMvB,EAAWwB,cAMjB,SAASC,EAAW1B,GAClBC,EAASF,EAAgBC,IACzBwB,GAAgB,GAGlB,OACE,yBAAQG,UAAU,SAAlB,UACE,qBAAIA,UAAU,wBAAd,UACE,oBAAIA,UAAU,6BAAd,SACsC,IAAnCC,OAAOC,KAAKZ,EAAMT,MAAMsB,OAAeb,EAAMT,KAAKuB,SAASC,KAAO,KAErE,oBAAIL,UAAU,6BAAd,SA5BO,CACX,qEACA,qEACA,6CACA,iCACA,6CACA,6CACA,8CAsBYT,GACJ,OACA,IAAIC,MAAOc,WACX,KACA,IAAId,MAAOe,eAEf,oBAAIP,UAAU,6BAAd,SACsC,IAAnCC,OAAOC,KAAKZ,EAAMT,MAAMsB,OACrBb,EAAMT,KAAK2B,QAAQC,UAAUC,KAC7B,QAGR,mBAAGV,UAAU,qBAAqBW,QA5BtC,WACEd,GAAgB,IA2Bd,uFAGA,sBAAKG,UAAU,oBAAf,UACE,mBAAGA,UAAU,gCAAb,SACsC,IAAnCC,OAAOC,KAAKZ,EAAMT,MAAMsB,OACrBb,EAAMT,KAAK2B,QAAQI,OAAS,EAC1B,IAAMC,KAAKC,MAAMxB,EAAMT,KAAK2B,QAAQI,QACpC,IAAMC,KAAKC,MAAMxB,EAAMT,KAAK2B,QAAQI,QACtC,KAEN,qBACEZ,UAAU,yBACVe,IAAI,uCACJC,IACqC,IAAnCf,OAAOC,KAAKZ,EAAMT,MAAMsB,OACpBb,EAAMT,KAAK2B,QAAQC,UAAUQ,KAC7B,KAGR,qBAAIjB,UAAU,wBAAd,UACE,qBAAIA,UAAU,6BAAd,2HACuB,IACrB,uBAAMA,UAAU,8BAAhB,UACsC,IAAnCC,OAAOC,KAAKZ,EAAMT,MAAMsB,OACrBb,EAAMT,KAAKqC,SAASC,YAAY,GAAGC,MAAK,IAAI5B,MAAOc,YAChDe,eACH,GAJN,UAQF,qBAAIrB,UAAU,6BAAd,oEACa,IACX,uBAAMA,UAAU,8BAAhB,UACsC,IAAnCC,OAAOC,KAAKZ,EAAMT,MAAMsB,OACrBb,EAAMT,KAAKqC,SAASC,YAAY,GAAG5B,IAAI+B,YACvC,GAHN,UAOF,qBAAItB,UAAU,6BAAd,4CACS,IACP,uBAAMA,UAAU,8BAAhB,UACsC,IAAnCC,OAAOC,KAAKZ,EAAMT,MAAMsB,OACrBU,KAAKC,MACHxB,EAAMT,KAAKqC,SAASC,YAAY,GAAGC,MACjC,IAAI5B,MAAOc,YACXiB,SAAW,KAEf,GAAI,IAPV,4BAaN,yBAASvB,UAAS,gBAAWJ,EAAe,eAAiB,IAA7D,SACE,qBAAII,UAAU,cAAd,UACE,oBACEA,UAAU,mBACVW,QAAS,kBAAMZ,EAAW,cAF5B,8DAMA,oBAAIC,UAAU,mBAAmBW,QAAS,kBAAMZ,EAAW,WAA3D,kDAGA,oBAAIC,UAAU,mBAAmBW,QAAS,kBAAMZ,EAAW,WAA3D,6D,YC7FKyB,MAnBf,SAAclC,GACZ,OACE,qBAAKU,UAAU,OAAf,SACE,qBAAIA,UAAU,aAAd,UACE,oBAAIA,UAAU,YAAd,SAA2BV,EAAMC,MACjC,oBAAIS,UAAU,aAAd,SAA4BV,EAAMmC,OAClC,oBAAIzB,UAAU,aAAd,SACE,qBAAKA,UAAU,aAAae,IAAI,uCAASC,IAAK1B,EAAM2B,SAEtD,qBAAIjB,UAAU,oBAAd,UACGV,EAAMoC,QADT,OACuB,IACrB,uBAAM1B,UAAU,0BAAhB,UAA2CV,EAAMqC,QAAjD,aAEF,oBAAI3B,UAAU,gBAAd,SAA+BV,EAAMsC,gBCyJ9BxC,mBAJf,SAAyBC,GACvB,MAAO,CAAER,KAAMQ,KAGFD,EApKf,SAAcE,GACZ,IAAMuC,EAAS,CACb,wCACA,8CACA,kCACA,wCACA,sBACA,4BACA,4BACA,8CACA,oDACA,8CACA,wCACA,+CAEIC,EAAO,CAAC,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,gBAElD,SAASC,EAAWN,GAClB,IAAMO,EAAYP,EAAKQ,MAAM,KAC7B,GAAIR,EAAM,CACR,IAAMS,EAAQF,EAAU,GAAGG,QAAQ,MAAO,IAE1C,OADYH,EAAU,GAAGG,QAAQ,MAAO,IAC3BN,EAAOK,IAIxB,SAASE,EAAUC,GACjB,IAAM9C,GAAM,IAAIC,MAAOC,SACvB,OAAY,IAARF,GAAwB,IAAX8C,EACR,EACE9C,EAAM,GAAgB,IAAX8C,EACb9C,EAAM,EACI,IAARA,GAAwB,IAAX8C,EACf,EACU,IAAR9C,GAAwB,IAAX8C,EACf,EACE9C,EAAM,GAAgB,IAAX8C,EACb9C,EAAM,OADR,EAKT,OACE,0BAASS,UAAU,OAAnB,UACE,oBAAIA,UAAU,cAAd,+HACA,sBAAKA,UAAU,kBAAf,UACE,cAAC,EAAD,CACET,IAAK,6CACLkC,KAAMM,EAC+B,IAAnC9B,OAAOC,KAAKZ,EAAMT,MAAMsB,OACpBb,EAAMT,KAAKqC,SAASC,YAAY,GAAGM,KACnC,IAENR,KACqC,IAAnChB,OAAOC,KAAKZ,EAAMT,MAAMsB,OACpBb,EAAMT,KAAKqC,SAASC,YAAY,GAAG5B,IAAIkB,UAAUQ,KACjD,GAENS,QACqC,IAAnCzB,OAAOC,KAAKZ,EAAMT,MAAMsB,OACpBb,EAAMT,KAAKqC,SAASC,YAAY,GAAG5B,IAAI+C,UAAY,EACjD,IACAzB,KAAKC,MAAMxB,EAAMT,KAAKqC,SAASC,YAAY,GAAG5B,IAAI+C,WAClD,IACAzB,KAAKC,MAAMxB,EAAMT,KAAKqC,SAASC,YAAY,GAAG5B,IAAI+C,WACpD,GAENX,QACqC,IAAnC1B,OAAOC,KAAKZ,EAAMT,MAAMsB,OACpBb,EAAMT,KAAKqC,SAASC,YAAY,GAAG5B,IAAIgD,UAAY,EACjD,IACA1B,KAAKC,MAAMxB,EAAMT,KAAKqC,SAASC,YAAY,GAAG5B,IAAIgD,WAClD,IACA1B,KAAKC,MAAMxB,EAAMT,KAAKqC,SAASC,YAAY,GAAG5B,IAAIgD,WACpD,GAENX,QACqC,IAAnC3B,OAAOC,KAAKZ,EAAMT,MAAMsB,OACpBb,EAAMT,KAAKqC,SAASC,YAAY,GAAG5B,IAAIkB,UAAUC,KACjD,KAIR,cAAC,EAAD,CACEnB,IAAKuC,EAAKM,EAAU,IACpBX,KAAMM,EAC+B,IAAnC9B,OAAOC,KAAKZ,EAAMT,MAAMsB,OACpBb,EAAMT,KAAKqC,SAASC,YAAY,GAAGM,KACnC,IAENR,KACqC,IAAnChB,OAAOC,KAAKZ,EAAMT,MAAMsB,OACpBb,EAAMT,KAAKqC,SAASC,YAAY,GAAG5B,IAAIkB,UAAUQ,KACjD,GAENS,QACqC,IAAnCzB,OAAOC,KAAKZ,EAAMT,MAAMsB,OACpBb,EAAMT,KAAKqC,SAASC,YAAY,GAAG5B,IAAI+C,UAAY,EACjD,IACAzB,KAAKC,MAAMxB,EAAMT,KAAKqC,SAASC,YAAY,GAAG5B,IAAI+C,WAClD,IACAzB,KAAKC,MAAMxB,EAAMT,KAAKqC,SAASC,YAAY,GAAG5B,IAAI+C,WACpD,GAENX,QACqC,IAAnC1B,OAAOC,KAAKZ,EAAMT,MAAMsB,OACpBb,EAAMT,KAAKqC,SAASC,YAAY,GAAG5B,IAAIgD,UAAY,EACjD,IACA1B,KAAKC,MAAMxB,EAAMT,KAAKqC,SAASC,YAAY,GAAG5B,IAAIgD,WAClD,IACA1B,KAAKC,MAAMxB,EAAMT,KAAKqC,SAASC,YAAY,GAAG5B,IAAIgD,WACpD,GAENX,QACqC,IAAnC3B,OAAOC,KAAKZ,EAAMT,MAAMsB,OACpBb,EAAMT,KAAKqC,SAASC,YAAY,GAAG5B,IAAIkB,UAAUC,KACjD,KAIR,cAAC,EAAD,CACEnB,IAAKuC,EAAKM,EAAU,IACpBX,KAAMM,EAC+B,IAAnC9B,OAAOC,KAAKZ,EAAMT,MAAMsB,OACpBb,EAAMT,KAAKqC,SAASC,YAAY,GAAGM,KACnC,IAENR,KACqC,IAAnChB,OAAOC,KAAKZ,EAAMT,MAAMsB,OACpBb,EAAMT,KAAKqC,SAASC,YAAY,GAAG5B,IAAIkB,UAAUQ,KACjD,GAENS,QACqC,IAAnCzB,OAAOC,KAAKZ,EAAMT,MAAMsB,OACpBb,EAAMT,KAAKqC,SAASC,YAAY,GAAG5B,IAAI+C,UAAY,EACjD,IACAzB,KAAKC,MAAMxB,EAAMT,KAAKqC,SAASC,YAAY,GAAG5B,IAAI+C,WAClD,IACAzB,KAAKC,MAAMxB,EAAMT,KAAKqC,SAASC,YAAY,GAAG5B,IAAI+C,WACpD,GAENX,QACqC,IAAnC1B,OAAOC,KAAKZ,EAAMT,MAAMsB,OACpBb,EAAMT,KAAKqC,SAASC,YAAY,GAAG5B,IAAIgD,UAAY,EACjD,IACA1B,KAAKC,MAAMxB,EAAMT,KAAKqC,SAASC,YAAY,GAAG5B,IAAIgD,WAClD,IACA1B,KAAKC,MAAMxB,EAAMT,KAAKqC,SAASC,YAAY,GAAG5B,IAAIgD,WACpD,GAENX,QACqC,IAAnC3B,OAAOC,KAAKZ,EAAMT,MAAMsB,OACpBb,EAAMT,KAAKqC,SAASC,YAAY,GAAG5B,IAAIkB,UAAUC,KACjD,cCtID8B,MAff,WACE,IAAMlE,EAAWwB,cAMjB,OAJAJ,IAAM+C,WAAU,WACdnE,EAASF,EAAgB,iBAIzB,sBAAK4B,UAAU,OAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,QCLS0C,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBlE,MAAK,YAAkD,IAA/CmE,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,QCLRO,EAAe,G,YCQfC,EAAQC,aDNP,WAAgD,IAA/B/D,EAA8B,uDAAtB6D,EAAcG,EAAQ,uCACpD,OAAQA,EAAOnE,MACb,KAAKhB,EACH,OAAO,eACFmB,GAEP,KAAKlB,EACH,OAAOkF,EAAOlE,QAChB,QACE,OAAOE,KCHsBiE,YAAgBC,MAEnDC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUP,MAAOA,EAAjB,SACE,cAAC,EAAD,QAGJQ,SAASC,eAAe,SAG1BlB,M","file":"static/js/main.245035bb.chunk.js","sourcesContent":["export const FETCH_WEATHER = \"FETCH_WEATHER\";\r\nexport const GET_DATA_WEATHER = \"GET_DATA_WEATHER\";\r\n","import { FETCH_WEATHER, GET_DATA_WEATHER } from \"./types\";\r\nimport axios from \"axios\";\r\n\r\nexport const weatherForecast = (city) => {\r\n  return (dispatch) => {\r\n    dispatch(fetchWeather());\r\n\r\n    axios\r\n      .get(\r\n        `http://api.weatherapi.com/v1/forecast.json?key=9b2d23e001b4416f900151137212909&days=10&aqi=no&alerts=no&lang=ru&q=${city}`\r\n      )\r\n      .then((res) => {\r\n        dispatch(getWeather(res.data));\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n};\r\n\r\nconst fetchWeather = () => ({\r\n  type: FETCH_WEATHER,\r\n});\r\n\r\nconst getWeather = (data) => ({\r\n  type: GET_DATA_WEATHER,\r\n  payload: {\r\n    ...data,\r\n  },\r\n});\r\n","import React from \"react\";\r\nimport \"./Header.css\";\r\nimport { connect } from \"react-redux\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { weatherForecast } from \"../../redux/actions\";\r\n\r\nfunction Header(props) {\r\n  const days = [\r\n    \"Воскресенье\",\r\n    \"Понедельник\",\r\n    \"Вторник\",\r\n    \"Среда\",\r\n    \"Четверг\",\r\n    \"Пятница\",\r\n    \"Суббота\",\r\n  ];\r\n  const day = new Date().getDay();\r\n  const [popupVisible, setPopupVisible] = React.useState(false);\r\n  const dispatch = useDispatch();\r\n\r\n  function changeCity() {\r\n    setPopupVisible(true);\r\n  }\r\n\r\n  function chooseCity(city) {\r\n    dispatch(weatherForecast(city));\r\n    setPopupVisible(false);\r\n  }\r\n\r\n  return (\r\n    <header className=\"header\">\r\n      <ul className=\"header__list-loaction\">\r\n        <li className=\"header__list-loaction_item\">\r\n          {Object.keys(props.data).length !== 0 ? props.data.location.name : \"\"}\r\n        </li>\r\n        <li className=\"header__list-loaction_item\">\r\n          {days[day] +\r\n            \",  \" +\r\n            new Date().getHours() +\r\n            \":\" +\r\n            new Date().getMinutes()}\r\n        </li>\r\n        <li className=\"header__list-loaction_item\">\r\n          {Object.keys(props.data).length !== 0\r\n            ? props.data.current.condition.text\r\n            : \"\"}\r\n        </li>\r\n      </ul>\r\n      <p className=\"header_change-city\" onClick={changeCity}>\r\n        Выбрать город\r\n      </p>\r\n      <div className=\"header__container\">\r\n        <p className=\"header__container_temperature\">\r\n          {Object.keys(props.data).length !== 0\r\n            ? props.data.current.temp_c > 0\r\n              ? \"+\" + Math.round(props.data.current.temp_c)\r\n              : \"-\" + Math.round(props.data.current.temp_c)\r\n            : \"\"}\r\n        </p>\r\n        <img\r\n          className=\"header__container_icon\"\r\n          alt=\"Погода\"\r\n          src={\r\n            Object.keys(props.data).length !== 0\r\n              ? props.data.current.condition.icon\r\n              : \"\"\r\n          }\r\n        />\r\n        <ul className=\"header__list-forecast\">\r\n          <li className=\"header__list-forecast_item\">\r\n            Вероятность осадков:{\" \"}\r\n            <span className=\"header__list-forecast_value\">\r\n              {Object.keys(props.data).length !== 0\r\n                ? props.data.forecast.forecastday[0].hour[new Date().getHours()]\r\n                    .chance_of_rain\r\n                : \"\"}\r\n              %\r\n            </span>\r\n          </li>\r\n          <li className=\"header__list-forecast_item\">\r\n            Влажность:{\" \"}\r\n            <span className=\"header__list-forecast_value\">\r\n              {Object.keys(props.data).length !== 0\r\n                ? props.data.forecast.forecastday[0].day.avghumidity\r\n                : \"\"}\r\n              %\r\n            </span>\r\n          </li>\r\n          <li className=\"header__list-forecast_item\">\r\n            Ветер:{\" \"}\r\n            <span className=\"header__list-forecast_value\">\r\n              {Object.keys(props.data).length !== 0\r\n                ? Math.round(\r\n                    props.data.forecast.forecastday[0].hour[\r\n                      new Date().getHours()\r\n                    ].gust_kph / 3.6\r\n                  )\r\n                : \"\"}{\" \"}\r\n              м/с\r\n            </span>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n      <section className={`popup ${popupVisible ? \"popup_active\" : \"\"}`}>\r\n        <ul className=\"popup__list\">\r\n          <li\r\n            className=\"popup__list_item\"\r\n            onClick={() => chooseCity(\"togliatti\")}\r\n          >\r\n            Тольятти\r\n          </li>\r\n          <li className=\"popup__list_item\" onClick={() => chooseCity(\"moscow\")}>\r\n            Москва\r\n          </li>\r\n          <li className=\"popup__list_item\" onClick={() => chooseCity(\"samara\")}>\r\n            Самара\r\n          </li>\r\n        </ul>\r\n      </section>\r\n    </header>\r\n  );\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return { data: state };\r\n}\r\n\r\nexport default connect(mapStateToProps)(Header);\r\n","import \"./Card.css\";\r\n\r\nfunction Card(props) {\r\n  return (\r\n    <div className=\"card\">\r\n      <ul className=\"card__list\">\r\n        <li className=\"card__day\">{props.day}</li>\r\n        <li className=\"card__date\">{props.date}</li>\r\n        <li className=\"card__item\">\r\n          <img className=\"card__icon\" alt=\"Погода\" src={props.icon} />\r\n        </li>\r\n        <li className=\"card__temperature\">\r\n          {props.maxTemp}&deg;{\" \"}\r\n          <span className=\"card__temperature_value\">{props.minTemp}&deg;</span>\r\n        </li>\r\n        <li className=\"card__weather\">{props.weather}</li>\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Card;\r\n","import \"./Main.css\";\r\nimport Card from \"../../Components/Card/Card\";\r\nimport { connect } from \"react-redux\";\r\n\r\nfunction Main(props) {\r\n  const months = [\r\n    \" Января\",\r\n    \" Февраля\",\r\n    \" Марта\",\r\n    \" Апреля\",\r\n    \" Мая\",\r\n    \" Июня\",\r\n    \" Июля\",\r\n    \" Августа\",\r\n    \" Сентября\",\r\n    \" Октября\",\r\n    \" Ноября\",\r\n    \" Декабря\",\r\n  ];\r\n  const days = [\"Вс\", \"Пн\", \"Вт\", \"Ср\", \"Чт\", \"Пт\", \"Сб\"];\r\n\r\n  function formatDate(date) {\r\n    const dateArray = date.split(\"-\");\r\n    if (date) {\r\n      const month = dateArray[1].replace(/^0+/, \"\");\r\n      const day = dateArray[2].replace(/^0+/, \"\");\r\n      return day + months[month];\r\n    }\r\n  }\r\n\r\n  function formatDay(number) {\r\n    const day = new Date().getDay();\r\n    if (day === 6 && number === 1) {\r\n      return 0;\r\n    } else if (day < 6 && number === 1) {\r\n      return day + 1;\r\n    } else if (day === 5 && number === 2) {\r\n      return 0;\r\n    } else if (day === 6 && number === 2) {\r\n      return 1;\r\n    } else if (day < 5 && number === 2) {\r\n      return day + 2;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <section className=\"main\">\r\n      <h2 className=\"main__title\">Прогноз погоды на 3 дня</h2>\r\n      <div className=\"main__container\">\r\n        <Card\r\n          day={\"Сегодня\"}\r\n          date={formatDate(\r\n            Object.keys(props.data).length !== 0\r\n              ? props.data.forecast.forecastday[0].date\r\n              : \"\"\r\n          )}\r\n          icon={\r\n            Object.keys(props.data).length !== 0\r\n              ? props.data.forecast.forecastday[0].day.condition.icon\r\n              : \"\"\r\n          }\r\n          maxTemp={\r\n            Object.keys(props.data).length !== 0\r\n              ? props.data.forecast.forecastday[0].day.maxtemp_c > 0\r\n                ? \"+\" +\r\n                  Math.round(props.data.forecast.forecastday[0].day.maxtemp_c)\r\n                : \"-\" +\r\n                  Math.round(props.data.forecast.forecastday[0].day.maxtemp_c)\r\n              : \"\"\r\n          }\r\n          minTemp={\r\n            Object.keys(props.data).length !== 0\r\n              ? props.data.forecast.forecastday[0].day.mintemp_c > 0\r\n                ? \"+\" +\r\n                  Math.round(props.data.forecast.forecastday[0].day.mintemp_c)\r\n                : \"-\" +\r\n                  Math.round(props.data.forecast.forecastday[0].day.mintemp_c)\r\n              : \"\"\r\n          }\r\n          weather={\r\n            Object.keys(props.data).length !== 0\r\n              ? props.data.forecast.forecastday[0].day.condition.text\r\n              : \"\"\r\n          }\r\n        />\r\n\r\n        <Card\r\n          day={days[formatDay(1)]}\r\n          date={formatDate(\r\n            Object.keys(props.data).length !== 0\r\n              ? props.data.forecast.forecastday[1].date\r\n              : \"\"\r\n          )}\r\n          icon={\r\n            Object.keys(props.data).length !== 0\r\n              ? props.data.forecast.forecastday[1].day.condition.icon\r\n              : \"\"\r\n          }\r\n          maxTemp={\r\n            Object.keys(props.data).length !== 0\r\n              ? props.data.forecast.forecastday[1].day.maxtemp_c > 0\r\n                ? \"+\" +\r\n                  Math.round(props.data.forecast.forecastday[1].day.maxtemp_c)\r\n                : \"-\" +\r\n                  Math.round(props.data.forecast.forecastday[1].day.maxtemp_c)\r\n              : \"\"\r\n          }\r\n          minTemp={\r\n            Object.keys(props.data).length !== 0\r\n              ? props.data.forecast.forecastday[1].day.mintemp_c > 0\r\n                ? \"+\" +\r\n                  Math.round(props.data.forecast.forecastday[1].day.mintemp_c)\r\n                : \"-\" +\r\n                  Math.round(props.data.forecast.forecastday[1].day.mintemp_c)\r\n              : \"\"\r\n          }\r\n          weather={\r\n            Object.keys(props.data).length !== 0\r\n              ? props.data.forecast.forecastday[1].day.condition.text\r\n              : \"\"\r\n          }\r\n        />\r\n\r\n        <Card\r\n          day={days[formatDay(2)]}\r\n          date={formatDate(\r\n            Object.keys(props.data).length !== 0\r\n              ? props.data.forecast.forecastday[2].date\r\n              : \"\"\r\n          )}\r\n          icon={\r\n            Object.keys(props.data).length !== 0\r\n              ? props.data.forecast.forecastday[2].day.condition.icon\r\n              : \"\"\r\n          }\r\n          maxTemp={\r\n            Object.keys(props.data).length !== 0\r\n              ? props.data.forecast.forecastday[2].day.maxtemp_c > 0\r\n                ? \"+\" +\r\n                  Math.round(props.data.forecast.forecastday[2].day.maxtemp_c)\r\n                : \"-\" +\r\n                  Math.round(props.data.forecast.forecastday[2].day.maxtemp_c)\r\n              : \"\"\r\n          }\r\n          minTemp={\r\n            Object.keys(props.data).length !== 0\r\n              ? props.data.forecast.forecastday[2].day.mintemp_c > 0\r\n                ? \"+\" +\r\n                  Math.round(props.data.forecast.forecastday[2].day.mintemp_c)\r\n                : \"-\" +\r\n                  Math.round(props.data.forecast.forecastday[2].day.mintemp_c)\r\n              : \"\"\r\n          }\r\n          weather={\r\n            Object.keys(props.data).length !== 0\r\n              ? props.data.forecast.forecastday[2].day.condition.text\r\n              : \"\"\r\n          }\r\n        />\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return { data: state };\r\n}\r\n\r\nexport default connect(mapStateToProps)(Main);\r\n","import React from \"react\";\nimport \"./App.css\";\nimport Header from \"../Header/Header\";\nimport Main from \"../Main/Main\";\nimport { useDispatch } from \"react-redux\";\nimport { weatherForecast } from \"../../redux/actions\";\n\nfunction App() {\n  const dispatch = useDispatch();\n\n  React.useEffect(() => {\n    dispatch(weatherForecast(\"togliatti\"));\n  });\n\n  return (\n    <div className=\"page\">\n      <Header />\n      <Main />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { FETCH_WEATHER, GET_DATA_WEATHER } from \"./types\";\r\n\r\nconst initialState = {};\r\n\r\nexport function reducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case FETCH_WEATHER:\r\n      return {\r\n        ...state,\r\n      };\r\n    case GET_DATA_WEATHER:\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"../src/Components/App/App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport { reducer } from \"./redux/reducer\";\nimport thunk from \"redux-thunk\";\n\nconst store = createStore(reducer, applyMiddleware(thunk));\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nreportWebVitals();\n"],"sourceRoot":""}